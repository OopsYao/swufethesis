name: Test
on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  # CTAN没有一个提供像npm那样的依赖管理机制，
  # 个人觉得这样宽松的依赖下进行l3build严格的对比机制不是太合理的
  # 也许前一天能通过的测试，第二天由于依赖的包更新就无法通过了
  # 开发环境的包的版本与CI上的很难一致
  # 也许需要把环境做成容器固定下来，这样CI与开发就能一致
  test:
    name: Test
    strategy:
      fail-fast: false
      matrix:
        cache-version: [v20210303.1]
        os:
          - ubuntu-18.04
          - macos-10.15
          # Windows上生成的tlg与linux、macos平台下总是有细微区别
          # 暂时没找到办法，决定不测了
          # - windows-2019
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Cache TeX Live
        id: cache
        uses: actions/cache@v2.1.4
        with:
          path: .ci-dock
          key: tl-${{ runner.os }}-${{ hashFiles('ci/texlive-packages') }}-${{ matrix.cache-version }}
      - name: Set up PATH
        shell: bash
        run: source ci/texlive-path.sh >> $GITHUB_PATH
      - name: Install TeX Live
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: source ci/texlive-install.sh
      - name: l3build
        run: l3build check -q
      - name: Check failure
        if: ${{ failure() }}
        shell: bash
        run: cat build/test/*.diff || cat build/test/*.fc
      - name: Doc
        run: l3build doc -q
